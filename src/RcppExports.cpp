// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// iotest_dynamic_particle
Rcpp::List iotest_dynamic_particle(Rcpp::List L);
RcppExport SEXP _pldensity_iotest_dynamic_particle(SEXP LSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::List >::type L(LSEXP);
    rcpp_result_gen = Rcpp::wrap(iotest_dynamic_particle(L));
    return rcpp_result_gen;
END_RCPP
}
// iotest_ddpn_hyperparam
Rcpp::List iotest_ddpn_hyperparam(Rcpp::List L);
RcppExport SEXP _pldensity_iotest_ddpn_hyperparam(SEXP LSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::List >::type L(LSEXP);
    rcpp_result_gen = Rcpp::wrap(iotest_ddpn_hyperparam(L));
    return rcpp_result_gen;
END_RCPP
}
// iotest_ddpn
Rcpp::List iotest_ddpn(Rcpp::List L);
RcppExport SEXP _pldensity_iotest_ddpn(SEXP LSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::List >::type L(LSEXP);
    rcpp_result_gen = Rcpp::wrap(iotest_ddpn(L));
    return rcpp_result_gen;
END_RCPP
}
// ddpn_init
Rcpp::List ddpn_init(const int nparticles, const arma::vec& lambda, const double kappa, const double nu, const arma::mat& Omega, const double alpha, const double rho);
RcppExport SEXP _pldensity_ddpn_init(SEXP nparticlesSEXP, SEXP lambdaSEXP, SEXP kappaSEXP, SEXP nuSEXP, SEXP OmegaSEXP, SEXP alphaSEXP, SEXP rhoSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const int >::type nparticles(nparticlesSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< const double >::type kappa(kappaSEXP);
    Rcpp::traits::input_parameter< const double >::type nu(nuSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Omega(OmegaSEXP);
    Rcpp::traits::input_parameter< const double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< const double >::type rho(rhoSEXP);
    rcpp_result_gen = Rcpp::wrap(ddpn_init(nparticles, lambda, kappa, nu, Omega, alpha, rho));
    return rcpp_result_gen;
END_RCPP
}
// ddpn_mix
Rcpp::List ddpn_mix(const Rcpp::List& model, const arma::mat& x, const int epochs, int new_period_every, int resample_every);
RcppExport SEXP _pldensity_ddpn_mix(SEXP modelSEXP, SEXP xSEXP, SEXP epochsSEXP, SEXP new_period_everySEXP, SEXP resample_everySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::List& >::type model(modelSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type x(xSEXP);
    Rcpp::traits::input_parameter< const int >::type epochs(epochsSEXP);
    Rcpp::traits::input_parameter< int >::type new_period_every(new_period_everySEXP);
    Rcpp::traits::input_parameter< int >::type resample_every(resample_everySEXP);
    rcpp_result_gen = Rcpp::wrap(ddpn_mix(model, x, epochs, new_period_every, resample_every));
    return rcpp_result_gen;
END_RCPP
}
// ddpn_eval
arma::vec ddpn_eval(const Rcpp::List& model, const arma::mat& x, const int nparticles);
RcppExport SEXP _pldensity_ddpn_eval(SEXP modelSEXP, SEXP xSEXP, SEXP nparticlesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::List& >::type model(modelSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type x(xSEXP);
    Rcpp::traits::input_parameter< const int >::type nparticles(nparticlesSEXP);
    rcpp_result_gen = Rcpp::wrap(ddpn_eval(model, x, nparticles));
    return rcpp_result_gen;
END_RCPP
}
// dst
arma::vec dst(const arma::mat& X, const arma::vec& mu, const arma::mat& Sigma, const double df);
RcppExport SEXP _pldensity_dst(SEXP XSEXP, SEXP muSEXP, SEXP SigmaSEXP, SEXP dfSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type X(XSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type mu(muSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Sigma(SigmaSEXP);
    Rcpp::traits::input_parameter< const double >::type df(dfSEXP);
    rcpp_result_gen = Rcpp::wrap(dst(X, mu, Sigma, df));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_pldensity_iotest_dynamic_particle", (DL_FUNC) &_pldensity_iotest_dynamic_particle, 1},
    {"_pldensity_iotest_ddpn_hyperparam", (DL_FUNC) &_pldensity_iotest_ddpn_hyperparam, 1},
    {"_pldensity_iotest_ddpn", (DL_FUNC) &_pldensity_iotest_ddpn, 1},
    {"_pldensity_ddpn_init", (DL_FUNC) &_pldensity_ddpn_init, 7},
    {"_pldensity_ddpn_mix", (DL_FUNC) &_pldensity_ddpn_mix, 5},
    {"_pldensity_ddpn_eval", (DL_FUNC) &_pldensity_ddpn_eval, 3},
    {"_pldensity_dst", (DL_FUNC) &_pldensity_dst, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_pldensity(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
